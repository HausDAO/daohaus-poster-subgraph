// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ActionCanceled extends ethereum.Event {
  get params(): ActionCanceled__Params {
    return new ActionCanceled__Params(this);
  }
}

export class ActionCanceled__Params {
  _event: ActionCanceled;

  constructor(event: ActionCanceled) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ActionDeleted extends ethereum.Event {
  get params(): ActionDeleted__Params {
    return new ActionDeleted__Params(this);
  }
}

export class ActionDeleted__Params {
  _event: ActionDeleted;

  constructor(event: ActionDeleted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AvatarSet extends ethereum.Event {
  get params(): AvatarSet__Params {
    return new AvatarSet__Params(this);
  }
}

export class AvatarSet__Params {
  _event: AvatarSet;

  constructor(event: AvatarSet) {
    this._event = event;
  }

  get previousAvatar(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAvatar(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ChangedGuard extends ethereum.Event {
  get params(): ChangedGuard__Params {
    return new ChangedGuard__Params(this);
  }
}

export class ChangedGuard__Params {
  _event: ChangedGuard;

  constructor(event: ChangedGuard) {
    this._event = event;
  }

  get guard(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CrossWithdraw extends ethereum.Event {
  get params(): CrossWithdraw__Params {
    return new CrossWithdraw__Params(this);
  }
}

export class CrossWithdraw__Params {
  _event: CrossWithdraw;

  constructor(event: CrossWithdraw) {
    this._event = event;
  }

  get target(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DoWithdraw extends ethereum.Event {
  get params(): DoWithdraw__Params {
    return new DoWithdraw__Params(this);
  }
}

export class DoWithdraw__Params {
  _event: DoWithdraw;

  constructor(event: DoWithdraw) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ExecuteAction extends ethereum.Event {
  get params(): ExecuteAction__Params {
    return new ExecuteAction__Params(this);
  }
}

export class ExecuteAction__Params {
  _event: ExecuteAction;

  constructor(event: ExecuteAction) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get transactions(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get avatar(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposeNewAction extends ethereum.Event {
  get params(): ProposeNewAction__Params {
    return new ProposeNewAction__Params(this);
  }
}

export class ProposeNewAction__Params {
  _event: ProposeNewAction;

  constructor(event: ProposeNewAction) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get withdrawToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get withdrawAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get moloch(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get memberOnly(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get transactions(): Bytes {
    return this._event.parameters[6].value.toBytes();
  }
}

export class Minion__actionsResult {
  value0: Bytes;
  value1: Address;
  value2: boolean;
  value3: Address;
  value4: BigInt;
  value5: Address;
  value6: boolean;

  constructor(
    value0: Bytes,
    value1: Address,
    value2: boolean,
    value3: Address,
    value4: BigInt,
    value5: Address,
    value6: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }
}

export class Minion extends ethereum.SmartContract {
  static bind(address: Address): Minion {
    return new Minion("Minion", address);
  }

  actions(param0: BigInt): Minion__actionsResult {
    let result = super.call(
      "actions",
      "actions(uint256):(bytes32,address,bool,address,uint256,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Minion__actionsResult(
      result[0].toBytes(),
      result[1].toAddress(),
      result[2].toBoolean(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toAddress(),
      result[6].toBoolean()
    );
  }

  try_actions(param0: BigInt): ethereum.CallResult<Minion__actionsResult> {
    let result = super.tryCall(
      "actions",
      "actions(uint256):(bytes32,address,bool,address,uint256,address,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Minion__actionsResult(
        value[0].toBytes(),
        value[1].toAddress(),
        value[2].toBoolean(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toAddress(),
        value[6].toBoolean()
      )
    );
  }

  avatar(): Address {
    let result = super.call("avatar", "avatar():(address)", []);

    return result[0].toAddress();
  }

  try_avatar(): ethereum.CallResult<Address> {
    let result = super.tryCall("avatar", "avatar():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deleteAction(_proposalId: BigInt): boolean {
    let result = super.call("deleteAction", "deleteAction(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_proposalId)
    ]);

    return result[0].toBoolean();
  }

  try_deleteAction(_proposalId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("deleteAction", "deleteAction(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_proposalId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  executeAction(_proposalId: BigInt, _transactions: Bytes): boolean {
    let result = super.call(
      "executeAction",
      "executeAction(uint256,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_proposalId),
        ethereum.Value.fromBytes(_transactions)
      ]
    );

    return result[0].toBoolean();
  }

  try_executeAction(
    _proposalId: BigInt,
    _transactions: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "executeAction",
      "executeAction(uint256,bytes):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(_proposalId),
        ethereum.Value.fromBytes(_transactions)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getGuard(): Address {
    let result = super.call("getGuard", "getGuard():(address)", []);

    return result[0].toAddress();
  }

  try_getGuard(): ethereum.CallResult<Address> {
    let result = super.tryCall("getGuard", "getGuard():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  guard(): Address {
    let result = super.call("guard", "guard():(address)", []);

    return result[0].toAddress();
  }

  try_guard(): ethereum.CallResult<Address> {
    let result = super.tryCall("guard", "guard():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hashOperation(_transactions: Bytes): Bytes {
    let result = super.call("hashOperation", "hashOperation(bytes):(bytes32)", [
      ethereum.Value.fromBytes(_transactions)
    ]);

    return result[0].toBytes();
  }

  try_hashOperation(_transactions: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "hashOperation",
      "hashOperation(bytes):(bytes32)",
      [ethereum.Value.fromBytes(_transactions)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  initialized(): boolean {
    let result = super.call("initialized", "initialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_initialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("initialized", "initialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPassed(_proposalId: BigInt): boolean {
    let result = super.call("isPassed", "isPassed(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_proposalId)
    ]);

    return result[0].toBoolean();
  }

  try_isPassed(_proposalId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPassed", "isPassed(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_proposalId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  minQuorum(): BigInt {
    let result = super.call("minQuorum", "minQuorum():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minQuorum(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minQuorum", "minQuorum():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  moloch(): Address {
    let result = super.call("moloch", "moloch():(address)", []);

    return result[0].toAddress();
  }

  try_moloch(): ethereum.CallResult<Address> {
    let result = super.tryCall("moloch", "moloch():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  molochDepositToken(): Address {
    let result = super.call(
      "molochDepositToken",
      "molochDepositToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_molochDepositToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "molochDepositToken",
      "molochDepositToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  multisendLibrary(): Address {
    let result = super.call(
      "multisendLibrary",
      "multisendLibrary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_multisendLibrary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "multisendLibrary",
      "multisendLibrary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposeAction(
    _transactions: Bytes,
    _withdrawToken: Address,
    _withdrawAmount: BigInt,
    _details: string,
    _memberOnlyEnabled: boolean
  ): BigInt {
    let result = super.call(
      "proposeAction",
      "proposeAction(bytes,address,uint256,string,bool):(uint256)",
      [
        ethereum.Value.fromBytes(_transactions),
        ethereum.Value.fromAddress(_withdrawToken),
        ethereum.Value.fromUnsignedBigInt(_withdrawAmount),
        ethereum.Value.fromString(_details),
        ethereum.Value.fromBoolean(_memberOnlyEnabled)
      ]
    );

    return result[0].toBigInt();
  }

  try_proposeAction(
    _transactions: Bytes,
    _withdrawToken: Address,
    _withdrawAmount: BigInt,
    _details: string,
    _memberOnlyEnabled: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposeAction",
      "proposeAction(bytes,address,uint256,string,bool):(uint256)",
      [
        ethereum.Value.fromBytes(_transactions),
        ethereum.Value.fromAddress(_withdrawToken),
        ethereum.Value.fromUnsignedBigInt(_withdrawAmount),
        ethereum.Value.fromString(_details),
        ethereum.Value.fromBoolean(_memberOnlyEnabled)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelActionCall extends ethereum.Call {
  get inputs(): CancelActionCall__Inputs {
    return new CancelActionCall__Inputs(this);
  }

  get outputs(): CancelActionCall__Outputs {
    return new CancelActionCall__Outputs(this);
  }
}

export class CancelActionCall__Inputs {
  _call: CancelActionCall;

  constructor(call: CancelActionCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelActionCall__Outputs {
  _call: CancelActionCall;

  constructor(call: CancelActionCall) {
    this._call = call;
  }
}

export class CrossWithdrawCall extends ethereum.Call {
  get inputs(): CrossWithdrawCall__Inputs {
    return new CrossWithdrawCall__Inputs(this);
  }

  get outputs(): CrossWithdrawCall__Outputs {
    return new CrossWithdrawCall__Outputs(this);
  }
}

export class CrossWithdrawCall__Inputs {
  _call: CrossWithdrawCall;

  constructor(call: CrossWithdrawCall) {
    this._call = call;
  }

  get _target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _transfer(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class CrossWithdrawCall__Outputs {
  _call: CrossWithdrawCall;

  constructor(call: CrossWithdrawCall) {
    this._call = call;
  }
}

export class DeleteActionCall extends ethereum.Call {
  get inputs(): DeleteActionCall__Inputs {
    return new DeleteActionCall__Inputs(this);
  }

  get outputs(): DeleteActionCall__Outputs {
    return new DeleteActionCall__Outputs(this);
  }
}

export class DeleteActionCall__Inputs {
  _call: DeleteActionCall;

  constructor(call: DeleteActionCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteActionCall__Outputs {
  _call: DeleteActionCall;

  constructor(call: DeleteActionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DoWithdrawCall extends ethereum.Call {
  get inputs(): DoWithdrawCall__Inputs {
    return new DoWithdrawCall__Inputs(this);
  }

  get outputs(): DoWithdrawCall__Outputs {
    return new DoWithdrawCall__Outputs(this);
  }
}

export class DoWithdrawCall__Inputs {
  _call: DoWithdrawCall;

  constructor(call: DoWithdrawCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DoWithdrawCall__Outputs {
  _call: DoWithdrawCall;

  constructor(call: DoWithdrawCall) {
    this._call = call;
  }
}

export class ExecuteActionCall extends ethereum.Call {
  get inputs(): ExecuteActionCall__Inputs {
    return new ExecuteActionCall__Inputs(this);
  }

  get outputs(): ExecuteActionCall__Outputs {
    return new ExecuteActionCall__Outputs(this);
  }
}

export class ExecuteActionCall__Inputs {
  _call: ExecuteActionCall;

  constructor(call: ExecuteActionCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _transactions(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ExecuteActionCall__Outputs {
  _call: ExecuteActionCall;

  constructor(call: ExecuteActionCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExecuteAsMinionCall extends ethereum.Call {
  get inputs(): ExecuteAsMinionCall__Inputs {
    return new ExecuteAsMinionCall__Inputs(this);
  }

  get outputs(): ExecuteAsMinionCall__Outputs {
    return new ExecuteAsMinionCall__Outputs(this);
  }
}

export class ExecuteAsMinionCall__Inputs {
  _call: ExecuteAsMinionCall;

  constructor(call: ExecuteAsMinionCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ExecuteAsMinionCall__Outputs {
  _call: ExecuteAsMinionCall;

  constructor(call: ExecuteAsMinionCall) {
    this._call = call;
  }
}

export class ProposeActionCall extends ethereum.Call {
  get inputs(): ProposeActionCall__Inputs {
    return new ProposeActionCall__Inputs(this);
  }

  get outputs(): ProposeActionCall__Outputs {
    return new ProposeActionCall__Outputs(this);
  }
}

export class ProposeActionCall__Inputs {
  _call: ProposeActionCall;

  constructor(call: ProposeActionCall) {
    this._call = call;
  }

  get _transactions(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _withdrawToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _withdrawAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _details(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _memberOnlyEnabled(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class ProposeActionCall__Outputs {
  _call: ProposeActionCall;

  constructor(call: ProposeActionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAvatarCall extends ethereum.Call {
  get inputs(): SetAvatarCall__Inputs {
    return new SetAvatarCall__Inputs(this);
  }

  get outputs(): SetAvatarCall__Outputs {
    return new SetAvatarCall__Outputs(this);
  }
}

export class SetAvatarCall__Inputs {
  _call: SetAvatarCall;

  constructor(call: SetAvatarCall) {
    this._call = call;
  }

  get _avatar(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAvatarCall__Outputs {
  _call: SetAvatarCall;

  constructor(call: SetAvatarCall) {
    this._call = call;
  }
}

export class SetGuardCall extends ethereum.Call {
  get inputs(): SetGuardCall__Inputs {
    return new SetGuardCall__Inputs(this);
  }

  get outputs(): SetGuardCall__Outputs {
    return new SetGuardCall__Outputs(this);
  }
}

export class SetGuardCall__Inputs {
  _call: SetGuardCall;

  constructor(call: SetGuardCall) {
    this._call = call;
  }

  get _guard(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGuardCall__Outputs {
  _call: SetGuardCall;

  constructor(call: SetGuardCall) {
    this._call = call;
  }
}

export class SetUpCall extends ethereum.Call {
  get inputs(): SetUpCall__Inputs {
    return new SetUpCall__Inputs(this);
  }

  get outputs(): SetUpCall__Outputs {
    return new SetUpCall__Outputs(this);
  }
}

export class SetUpCall__Inputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }

  get _initializationParams(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetUpCall__Outputs {
  _call: SetUpCall;

  constructor(call: SetUpCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
